// https://leetcode.com/problems/find-median-from-data-stream/

class MedianFinder {

    /** initialize your data structure here. */
    PriorityQueue<Integer> minPQ;
    PriorityQueue<Integer> maxPQ;
    public MedianFinder() {
        this.minPQ = new PriorityQueue<>();
        this.maxPQ = new PriorityQueue<>(new Comparator<Integer>() {
            
            public int compare(Integer o1, Integer o2) {
                return o2.compareTo(o1);
            }
        });
        
    }
    
    public void addNum(int num) {
        maxPQ.add(num);
        minPQ.add(maxPQ.poll());
        if(maxPQ.size() < minPQ.size()) {
            maxPQ.add(minPQ.poll());
        }
    }
    
    public double findMedian() {
        if(maxPQ.size() == minPQ.size()) {
            return ((maxPQ.peek() + minPQ.peek())*0.5);
        } 
        return maxPQ.peek();
    }
}

